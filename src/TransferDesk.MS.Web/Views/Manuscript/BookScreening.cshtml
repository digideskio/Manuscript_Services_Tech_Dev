@model TransferDesk.Services.Manuscript.ViewModel.ManuscriptBookScreeningVm

@{
    ViewBag.Title = "BookScreening";
    Layout = "~/Views/Shared/_BookScreening.cshtml";
}
@Styles.Render("~/bundles/styles")
@Scripts.Render("~/bundles/jquery")
@* add this cdn file in bundle config file at this bundle ~/bundles/styles  *@
<link type="text/css" rel="Stylesheet" href="http://ajax.microsoft.com/ajax/jquery.ui/1.8.6/themes/smoothness/jquery-ui.css" />
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<br />
<br />
<br />
@Html.Raw(TempData["MSIDError"])
@Html.Raw(TempData["msg"])
@using (Html.BeginForm("BookScreening", "Manuscript", FormMethod.Post))
{

    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.BookScreeningID, new { id = "dbID" })
    @Html.HiddenFor(model => model.BookLoginID)
    @Html.HiddenFor(x => x.IsAssociateFinalSubmit, new { id = "hdnIsAssociateFinalSubmit" })
    @Html.HiddenFor(x => x.IsQualityFinalSubmit, new { id = "hdnIsQualityFinalSubmit" })
    @Html.Hidden("tmpAssociateFinalSubmitValue")
    @Html.Hidden("tmpQualityFinalSubmitValue")
    @Html.HiddenFor(x=>x.AssociateFinalSubmitDate)
    @Html.HiddenFor(x => x.AssociateUserID)
    <table width="100%">
        <tr>
            <td width="168px">
                Start Date
            </td>
            <td width="214px">
                @Html.TextBoxFor(x => x.StartDate, new { @class = "form-control input-sm", placeholder = "dd/mm/yyyy", @readonly = "readonly", @Value = Model.StartDate.HasValue ? Model.StartDate.Value.ToShortDateString() : DateTime.Now.ToShortDateString() })
            </td>
            <td align="right" colspan="2" width="456px">
                <b>@Model.EmployeeName</b>
            </td>
            <td align="right">
                Role&nbsp;&nbsp;&nbsp;
            </td>
            <td align="right" width="210px">
                @Html.DropDownListFor(x => x.RollID, new SelectList(ViewBag.RoleList, "ID", "RoleName"), new { @class = "form-control input-sm", id = "ddlRole" })
            </td>
        </tr>
    </table>
    <hr />
    <div class="titles"><span><b>Manuscripts Details</b></span></div>
    <table class=" tWidth lastTDAlign ManuscriptDetails">
        <tr>
            <td>
                Book Title
                <span class="asterik">* </span>
            </td>
            <td>
                @Html.DropDownListFor(x => x.BookTitleId, new SelectList(ViewBag.BookTitleList, "ID", "BookTitle"), "Select-Book Title", new { @class = "form-control input-sm", id = "ddlBookTitle" })
                @Html.HiddenFor(x=>x.BookTitleId)
            </td>
            <td>
                <span>
                    Chapter Number
                    <span class="asterik">*</span>
                </span>
            </td>
            <td>
                @Html.TextBoxFor(model => model.ChapterNumber, new { @class = "form-control input-sm", placeholder = "Enter Chapter Number" })
            </td>
            <td>
                Chapter Title<span class="asterik"> *</span>
            </td>
            <td>
                @Html.TextBoxFor(model => model.ChapterTitle, new { @class = "form-control input-sm", placeholder = "Enter Chapter Title" })
            </td>
        </tr>
        <tr>
            <td>
                Received Date
                <span class="asterik"> *</span>
            </td>
            <td>
                @Html.TextBoxFor(model => model.ReceivedDate, new { @class = "form-control input-sm", placeholder = "dd/mm/yyyy", @Value = Model.ReceivedDate.ToShortDateString() })
            </td>
            <td>
                <span>Page Count<span class="asterik"> *</span> </span>
            </td>
            <td>
                @Html.TextBoxFor(x => x.PageCount, new { @class = "form-control input-sm", placeholder = "Enter Page Count" })
            </td>
            <td>
                <span>
                    Shared Drive Path
                </span>
            </td>
            <td style="text-align: left;word-wrap: break-word" class="ManuscriptDetailsLastRow">
                <a href="@Model.ShareDrivePath" title="" target="_blank">@Model.ShareDrivePath</a>
            </td>
        </tr>
    </table>
    <hr />
    <div class="titles"><span><b>Author(s) Details</b></span></div>
    <table class="tWidth">
        <tr>
            <td>
                Corresponding Author<span class="asterik"> *</span>
            </td>
            <td>
                @Html.TextBoxFor(x => x.CorrespondingAuthor, new { @class = "form-control input-sm", placeholder = "Enter Corresponding Author" })

            </td>
            <td>
                <span>Corresponding Author Email<span class="asterik"> *</span> </span>
            </td>
            <td>
                @Html.TextBoxFor(x => x.CorrespondingAuthorEmail, new { @class = "form-control input-sm", placeholder = "Enter Corresponding Author Email" })

            </td>
            <td colspan="2">
                <span>Corr. Author Affiliation</span>
            </td>
            <td>
                @Html.TextBoxFor(x => x.CorrespondingAuthorAff, new { @class = "form-control input-sm", placeholder = "Enter Author affiliation" })
            </td>
        </tr>
    </table>

    @Html.ValidationSummary("Following fields are mandatory:", new { @class = "alert alert-danger" })
    <hr />

    <div class="titles"><span><b>Analytical Findings</b></span></div>
    <table class="tWidth">
        <tr>
            <td>
                <span>iThenticate %</span>
                <span class="asterik"> *</span>
            </td>
            <td>
                @Html.TextBoxFor(x => x.iThenticatePercentage, new { @class = "form-control input-sm", placeholder = "Enter iThenticate %" })
            </td>
            <td>
                <span>Highest iThenticate % from a single source</span>
                <span class="asterik"> *</span>
            </td>
            <td>
                @Html.TextBoxFor(x => x.Highest_iThenticateFromSingleSrc, new { @class = "form-control input-sm", placeholder = "Enter highest iThenticate % from single source" })
            </td>
            <td>
                <span>Cross Check /  iThenticate result</span>
                <span class="asterik"> *</span>
            </td>
            <td style="text-align:left">
                @* dropdownlist for ithenticate result with images *@
                <div id="ddliThenticateResult">
                </div>
                @Html.TextBoxFor(x => x.Crosscheck_iThenticateResultID, new { id = "hdniThenticateResult", style = "Display:None" })
                @Html.Hidden("Crosscheck_iThenticateResultID1", "", new { id = "hdniThenticateResult1" })
                <input type="hidden" id="hdniThenticate" value="@Model.Crosscheck_iThenticateResultID" />
                @Html.TextAreaFor(x => x.Comments_Crosscheck_iThenticateResult, new { @class = "form-control imgDropDownComment", id = "txtComments_Crosscheck_iThenticateResult" })
            </td>

        </tr>
        <tr>
            <td>
                <span>English Language Quality</span><span class="asterik">*</span>
            </td>
            <td>
                <div id="ddlEnglishlangQuality">
                </div>
                @Html.TextBoxFor(x => x.English_Lang_QualityID, new { id = "hdnEnglishlangQuality", style = "Display:None" })
                @Html.Hidden("English_Lang_QualityID1", "", new { id = "hdnEnglishlangQuality1" })
                <input type="hidden" id="hdnEnglishlang" value="@Model.English_Lang_QualityID" />
                @Html.TextAreaFor(x => x.Comments_English_Lang_Quality, new { @class = "form-control imgDropDownComment", id = "txtComments_English_Lang_Quality" })
            </td>
            <td>
                <span>Ethics Compliance </span>
                <span class="asterik">*</span>
            </td>
            <td>
                <div id="ddlEthicsComplience">
                </div>
                @* Displaying error *@
                @Html.TextBoxFor(x => x.Ethics_ComplianceID, new { id = "hdnEthicsComplience", style = "Display:None" })
                <input type="hidden" id="hdnEthics" value="@Model.Ethics_ComplianceID" />
                @Html.Hidden("Ethics_ComplianceID1", "", new { id = "hdnEthicsComplience1" })
                @Html.TextAreaFor(x => x.Comments_Ethics_Compliance, new { @class = "form-control imgDropDownComment", id = "txtComments_Ethics_Compliance" })
            </td>
            <td>
                <span>Final Advice </span>
                <span class="asterik">*</span>
            </td>
            <td disabled='true'>
                <div id="ddlOverallAnalysis">
                </div>
                @Html.TextBoxFor(x => x.OverallAnalysisID, new { style = "Display:None" })
                <input type="hidden" id="hdnOverallAnalysis" value="@Model.OverallAnalysisID" />
                @Html.Hidden("OverallAnalysisID", "", new { id = "hdnOverallAnalysis1" })
                @Html.TextAreaFor(x => x.Comments_OverallAnalysis, new { @class = "form-control imgDropDownComment", id = "txtComments_OverallAnalysis" })
            </td>
        </tr>
        <tr>
            <td colspan="5"></td>
            <td>
                <input type="button" id="btnPreviewBookManuscript" value="Preview MS" class="btn btn-primary btn-sm" data-target="#BookPreviewManuscript">
                <input type="submit" id="btnAssociateSave" name="AssociateCommand" value="Save" class="btn btn-primary btn-sm" />
                <input type="submit" id="btnAssociateIsFinalSubmit" name="AssociateCommand" value="Submit" class="btn btn-primary btn-sm" />
            </td>
        </tr>
    </table>
        <div id="BookPreviewManuscript" class="modal fade" tabindex='-1' data-backdrop="static" data-dismiss="modal">
        <div class="modal-dialog modal-wide">
            <div class="modal-content">
                <div class="modal-header">
                    <label>Manuscript Book Preview</label>
                    <button type="button" class="close" data-dismiss="modal" name="ClosePopup" aria-hidden="true">&times;</button>
                </div>
                <div class="modal-body">
                    <div id="divBookPreviewManuscript"></div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default btn-sm" data-dismiss="modal" name="ClosePopup">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div>Manuscript Book Screening Mandatory Fields<span class="asterik">*</span></div>

    <hr id="hrUpQualityAnalyst" />
    <div id="divQualityAnalyst" style="display:none" width="100%">
        <div class="titles"><span><b>Quality Analyst</b></span></div>
        <table width="100%">
            <tr>
                <td width="168px">
                    <span>Quality Check</span>
                </td>
                <td width="214px">
                    @Html.DropDownListFor(x => x.QualityCheck, new SelectList(new List<Object>{
                       new { value = "True" , text = "Yes"  },
                       new { value = "False" , text = "No" }
                    }, "value", "text"), new { @class = "form-control input-sm" })
                </td>
                <td align="right" width="154px">
                    <span>Quality Check Date</span>
                </td>
                <td width="214px" style="padding-left:1.6em">
                    @Html.TextBoxFor(x => x.QualityStartCheckDate, new { @class = "form-control input-sm", placeholder = "dd/mm/yyyy" })
                </td>
                <td align="center" width="175px">
                    <span>Accurate</span>
                </td>
                <td style="float:right" width="210">
                    @Html.DropDownListFor(x => x.Accurate, new SelectList(new List<Object>{
                       new { value = "False" , text = "No"  },
                       new { value = "True" , text = "Yes" }
                    }, "value", "text"), new { @class = "form-control input-sm", id = "ddlAccurate" })
                </td>
            </tr>
            <tr>
                <td width="168px" align="left">
                    <span>Error Category</span>
                </td>
                <td width="214px">
                    <div id="ListManuscriptErrorCategoriesVM">
                        <table>
                            @for (var i = 0; i < Model.ListManuscriptErrorCategoriesVM.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @Html.HiddenFor(x => x.ListManuscriptErrorCategoriesVM[i].ID)
                                        @Html.HiddenFor(x => x.ListManuscriptErrorCategoriesVM[i].ErrorCategoryID)
                                        @Html.CheckBoxFor(x => x.ListManuscriptErrorCategoriesVM[i].IsSelected, new { @class = "chkQualityCheck" })
                                    </td>
                                    <td>@Html.DisplayFor(x => x.ListManuscriptErrorCategoriesVM[i].ErrorCategoryName)</td>
                                </tr>
                            }
                        </table>
                    </div>
                </td>
                <td align="center" width="154px">
                    <span style="padding-left: 1em;"> Error Description  </span>
                </td>
                <td colspan="2" align="left" style="padding-left:1.6em">
                    @Html.TextAreaFor(x => x.ErrorDescription, new { cols = "50", style = "height:150px" })
                </td>
                <td align="right" style="vertical-align:bottom">
                    <input type="submit" id="btnQualitySave" name="QualityCommand" value="Save" class="btn btn-primary btn-sm" />
                    <input type="submit" id="btnIsQualityFinalSubmit" name="QualityCommand" value="Submit" class="btn btn-primary btn-sm" />
                </td>
            </tr>
        </table>
    </div>
    <a href="#" id="scroll-up" style="display: none;"></a>
}

<script src="~/Scripts/tinymce/tinymce.min.js"></script>
<script type="text/javascript">
    $(document).ready(function() {

         $("#btnPreviewBookManuscript").click(function() {
            var param = {
                ManuscriptBookScreeningVm: @Html.Raw(Json.Encode(Model)),
            };
            if (param.ManuscriptBookScreeningVm.StartDate != '' && param.ManuscriptBookScreeningVm.StartDate != null)
                param.ManuscriptBookScreeningVm.StartDate = formatJsonDate(param.ManuscriptBookScreeningVm.StartDate);
            if (param.ManuscriptBookScreeningVm.ReceivedDate != '' && param.ManuscriptBookScreeningVm.ReceivedDate != null)
                param.ManuscriptBookScreeningVm.ReceivedDate = formatJsonDate(param.ManuscriptBookScreeningVm.ReceivedDate);
            if (param.ManuscriptBookScreeningVm.QualityStartCheckDate != '' && param.ManuscriptBookScreeningVm.QualityStartCheckDate != null)
                param.ManuscriptBookScreeningVm.QualityStartCheckDate = formatJsonDate(param.ManuscriptBookScreeningVm.QualityStartCheckDate);

            $.ajax(
            {
                method: "POST",
                url: '@Url.Action("BookPreviewForm")',
                async: false,
                cache: false,
                traditional: true,
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(param.ManuscriptBookScreeningVm),
                success: function(returnValue) {
                    $("#divBookPreviewManuscript").empty();
                    $("#divBookPreviewManuscript").append(returnValue);
                    $("#BookPreviewManuscript").modal();
                },
                error: function(xhr, exception) {
                    alert('Please, add information');
                }
            });
        });
        $('#myModal, #BookPreviewManuscript').on('shown.bs.modal', function () {
            $(this).find('.modal-dialog').css({
                width: 'auto',
                height: 'auto',
                'max-height': '100%'
            });
        });

        function formatJsonDate(jsonDate) {
            return (new Date(parseInt(jsonDate.substr(6)))).toDateString("dd/mm/yyyy");
        };
        try {
            var ddlIthenticateResult = @Html.Raw(ViewBag.iThenticateResult);
                var ddlEnglishlangQuality = @Html.Raw(ViewBag.EnglishLangQuality);
                var ddlEthicsComplience = @Html.Raw(ViewBag.EthicsComplience);
                var ddlOverallAnalysis = @Html.Raw(ViewBag.OverallAnalysis);
                addIthenticateResult(ddlIthenticateResult);
                addEnglishlangQuality(ddlEnglishlangQuality);
                addEthicsComplience(ddlEthicsComplience);
                addOverallAnalysis(ddlOverallAnalysis);
                $('.dd-select').height(30).css({ "vertical-align": "top" });
                $('.dd-select').css("background", "");
                $(".dd-selected-text").css({ "line-height": "20px" });
                $(".dd-option-text").css({ "line-height": "20px" });
                $(".dd-selected").css({ "padding": "5px", "display": "inline" });
                $('.dd-option').height(18);
                $('.dd-option').css({ "padding-right": "1px" });
                $(".dd-image-right").css({ "margin-right": "1px" });
                $('.dd-select').css({ "height": "30px", "width": "208" });
                $(".dd-options.dd-click-off-close").css({ "width": "208" });
                $(".dd-container").css({ "width": "208" });
                $('#ddlOverallAnalysis').css({ "pointer-events": "none" });
                $("textarea#txtComments_Crosscheck_iThenticateResult.form-control").css({ "padding": "2px" });
                $("textarea#txtComments_English_Lang_Quality.form-control").css({ "padding": "2px" });
                $("textarea#txtComments_Ethics_Compliance.form-control").css({ "padding": "2px" });


            //first time loading binding
                $('#ddliThenticateResult li').each(function(index) {
                    var currs = $(this).find('.dd-option-value').val();
                    if (currs == $('#hdniThenticate').val()) {
                        $('#ddliThenticateResult').ddslick('select', { index: $(this).index() });
                    }
                });


                $('#ddlEnglishlangQuality li').each(function(index) {
                    var currs = $(this).find('.dd-option-value').val();
                    if (currs == $('#hdnEnglishlang').val()) {
                        $('#ddlEnglishlangQuality').ddslick('select', { index: $(this).index() });
                    }
                });

                $('#ddlEthicsComplience li').each(function(index) {
                    var currs = $(this).find('.dd-option-value').val();
                    if (currs == $('#hdnEthics').val()) {
                        $('#ddlEthicsComplience').ddslick('select', { index: $(this).index() });
                    }
                });
                $('#ddlOverallAnalysis li').each(function(index) {
                    var currs = $(this).find('.dd-option-value').val();
                    if (currs == $('#hdnOverallAnalysis').val()) {
                        $('#ddlOverallAnalysis').ddslick('select', { index: $(this).index() });
                    }
                });

            } catch (error) {
            }
    });


        function addIthenticateResult(ddlData) {
            var dataddl = [];
            var data;
            for (var index = 0; index <= ddlData.length - 1; index++) {
                dataddl.push({
                    text: ddlData[index].DropDownText,
                    value: ddlData[index].ID,
                    imageSrc: AppPath + "Images/" + ddlData[index].ImageName + ".bmp"

                });
            }
            $('#ddliThenticateResult').ddslick({
                data: dataddl,
                width: 230,
                //selectText:"Select-iThenticateResult",
                imagePosition: "right",
                onSelected: function(selectedData) {
                    //callback function: do something with selectedData;
                    $('#hdniThenticateResult').val(selectedData.selectedData.value);
                    $('#hdniThenticateResult1').val(selectedData.selectedIndex);
                    $(".dd-image-right").css({ "margin-right": "1px" });
                    CalculateMatrixLegend();
                    if (selectedData.selectedIndex != 0) {
                        $("textarea#txtComments_Crosscheck_iThenticateResult").css({ "display": "normal" });
                    } else {
                        $("textarea#txtComments_Crosscheck_iThenticateResult").css({ "display": "none" });
                    }
                }
            });

        }

        function addEnglishlangQuality(ddlData) {
            var dataddl = [];
            var data;
            for (var index = 0; index <= ddlData.length - 1; index++) {
                dataddl.push({
                    text: ddlData[index].DropDownText,
                    value: ddlData[index].ID,
                    imageSrc: AppPath + "Images/" + ddlData[index].ImageName + ".bmp"
                });
            }
            $('#ddlEnglishlangQuality').ddslick({
                data: dataddl,
                width: 230,
                //selectText:"Select-EnglishlangQuality",
                imagePosition: "right",
                onSelected: function(selectedData) {
                    //callback function: do something with selectedData;
                    $('#hdnEnglishlangQuality').val(selectedData.selectedData.value);
                    $('#hdnEnglishlangQuality1').val(selectedData.selectedIndex);
                    $(".dd-image-right").css({ "margin-right": "1px" });
                    CalculateMatrixLegend();
                    if (selectedData.selectedIndex != 0) {
                        $("textarea#txtComments_English_Lang_Quality").css({ "display": "normal" });
                    } else {
                        $("textarea#txtComments_English_Lang_Quality").css({ "display": "none" });
                    }
                }
            });

        }

        function addEthicsComplience(ddlData) {
            var dataddl = [];
            var data;
            for (var index = 0; index <= ddlData.length - 1; index++) {
                dataddl.push({
                    text: ddlData[index].DropDownText,
                    value: ddlData[index].ID,
                    imageSrc: AppPath + "Images/" + ddlData[index].ImageName + ".bmp"
                });
            }
            $('#ddlEthicsComplience').ddslick({
                data: dataddl,
                width: 230,
                //selectText:"Select-EthicsComplience",
                imagePosition: "right",
                onSelected: function(selectedData) {
                    //callback function: do something with selectedData;
                    $('#hdnEthicsComplience').val(selectedData.selectedData.value);
                    $('#hdnEthicsComplience1').val(selectedData.selectedIndex);
                    $(".dd-image-right").css({ "margin-right": "1px" });
                    CalculateMatrixLegend();
                    if (selectedData.selectedIndex != 0) {
                        $("textarea#txtComments_Ethics_Compliance").css({ "display": "normal" });
                    } else {
                        $("textarea#txtComments_Ethics_Compliance").css({ "display": "none" });
                    }
                }
            });
        }

        function addOverallAnalysis(ddlData) {
            var dataddl = [
                {
                    text: "",
                    value: 0,
                    selected: false,
                }
            ];
            var data;
            for (var index = 0; index <= ddlData.length - 1; index++) {
                dataddl.push({
                    text: ddlData[index].DropDownText,
                    value: ddlData[index].ID,
                    imageSrc: AppPath + "Images/" + ddlData[index].ImageName + ".bmp"

                });
            }
            $('#ddlOverallAnalysis').ddslick({
                data: dataddl,
                width: 230,
                imagePosition: "right",
                onSelected: function(selectedData) {
                    $('#OverallAnalysisID').val(selectedData.selectedData.value);
                    $('#hdnOverallAnalysis1').val(selectedData.selectedData.value);
                    $(".dd-image-right").css({ "margin-right": "1px" });
                    if (selectedData.selectedIndex != 0) {
                        $("textarea#txtComments_OverallAnalysis").css({ "display": "normal" });
                    } else {
                        $("textarea#txtComments_OverallAnalysis").css({ "display": "none" });
                    }
                }
            });
        }


        function CalculateMatrixLegend() {
            var iThenticateResult = $('#hdniThenticateResult1').val();
            var EnglishlangQualityId = $('#hdnEnglishlangQuality1').val();
            var EthicsComplienceId = $('#hdnEthicsComplience1').val();
            if (iThenticateResult == 0 || EnglishlangQualityId == 0 || EthicsComplienceId == 0)
                $('#ddlOverallAnalysis').ddslick('select', { index: 0 });
            else if (iThenticateResult == 1 || EnglishlangQualityId == 1 || EthicsComplienceId == 1)
                $('#ddlOverallAnalysis').ddslick('select', { index: 1 });
            else if (iThenticateResult == 2 || EnglishlangQualityId == 2 || EthicsComplienceId == 2)
                $('#ddlOverallAnalysis').ddslick('select', { index: 2 });
            else if (EthicsComplienceId == 4)
                $('#ddlOverallAnalysis').ddslick('select', { index: 4 });
            else if (EthicsComplienceId == 3)
                $('#ddlOverallAnalysis').ddslick('select', { index: 3 });
            else
                $('#ddlOverallAnalysis').ddslick('select', { index: 3 });
        }

</script>
<script src="~/Scripts/ExternalScript/jquery-ddlslick.js"></script>
<script src="~/Scripts/CustomeScript/BookScreening.js"></script>


